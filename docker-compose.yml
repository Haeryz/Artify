version: '3.8'

# Define a custom network for inter-service communication
networks:
  artify-network:
    driver: bridge

# Use secrets for sensitive data
secrets:
  firebase_credentials:
    file: ./backend/artify-32f50-firebase-adminsdk-fbsvc-638bf3a0e6.json
  token_encryption_secret:
    file: ./backend/.token_secret.txt # You need to create this file with a strong random key

services:
  backend:
    build: 
      context: ./backend
      args:
        - FIREBASE_API_KEY=${FIREBASE_API_KEY}
        - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
        - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
        - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
        - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
        - FIREBASE_APP_ID=${FIREBASE_APP_ID}
        - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
        - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
        - GEMINI_API_KEY=${GEMINI_API_KEY}
        - TOKEN_ENCRYPTION_SECRET=${TOKEN_ENCRYPTION_SECRET}
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - artify-network
    secrets:
      - firebase_credentials
      - token_encryption_secret
    environment:
      - NODE_ENV=production
      - PORT=5000
    # Resource limits to prevent DoS attacks
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    # Security options
    security_opt:
      - no-new-privileges:true
    # Read-only filesystem with specific writable directories
    volumes:
      - /tmp:/tmp
    # Health monitoring
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    # Logging configuration with size limits to prevent disk filling attacks
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - artify-network
    # Frontend doesn't need direct access to the database
    depends_on:
      - backend
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
    # Security options
    security_opt:
      - no-new-privileges:true
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    # Only expose MongoDB internally, not to the host
    expose:
      - "27017"
    networks:
      - artify-network
    # Store data persistently
    volumes:
      - mongodb_data:/data/db
    # Environment variables for MongoDB auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    # Security options
    security_opt:
      - no-new-privileges:true
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_data: